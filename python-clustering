#unsupervised learning-clustering
import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import silhouette_score
import matplotlib.pyplot as plt
df=pd.read_csv("/content/sample_data/Document from Priyadharshini Elavarasan.csv")
#select feature for clustering
x =df[['Annual Income (k$)','Spending Score (1-100)']].copy()
#scale feature
scaler=StandardScaler()
x_scaled=scaler.fit_transform(x)
print(x_scaled)
#fit k-means(k=5 is common for this dataset)
k=5
kmeans=KMeans(n_clusters=k,n_init=10,random_state=42)
labels=kmeans.fit_predict(x_scaled)
#get cluster labels
labels=kmeans.labels_
#evaluating clustering  quality
sil = silhouette_score(x_scaled, labels)
print(f"Silhouette Score:, {sil:.3f}")
#add cluster  label
df['Cluster']=labels
#visualization
plt.figure(figsize=(7,5))
plt.scatter(x["Annual Income (k$)"], x["Spending Score (1-100)"], c=labels)
centers = scaler.inverse_transform(kmeans.cluster_centers_)
plt.scatter(centers[:,0],centers[:,1],marker="x",s=200)
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.title('Customer Clusters')
plt.show()
